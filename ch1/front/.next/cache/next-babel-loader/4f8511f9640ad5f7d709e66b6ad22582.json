{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst dummyUser = {\n  nickname: '디와이',\n  Post: [],\n  Followings: [],\n  Followers: []\n};\nexport const initialState = {\n  isLoggedIn: false,\n  user: {\n    nickname: '디와이',\n    Post: [],\n    Followings: [],\n    Followers: [],\n    isLoggedIn: false\n  }\n};\nexport const LOG_IN = 'LOG_IN'; //액션의 이름\n\nexport const LOG_OUT = 'LOG_OUT'; //액션의 이름\n\nexport const loginAction = {\n  type: LOG_IN,\n  data: {\n    nickname: '디와이'\n  }\n};\nexport const logoutAction = {\n  type: LOG_OUT\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: true,\n          user: action.data\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/intellijRepository/reactStudy/ch1/front/reducers/user.js"],"names":["dummyUser","nickname","Post","Followings","Followers","initialState","isLoggedIn","user","LOG_IN","LOG_OUT","loginAction","type","data","logoutAction","reducer","state","action"],"mappings":";;;;;;AAAA,MAAMA,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAC,KADK;AAEdC,EAAAA,IAAI,EAAC,EAFS;AAGdC,EAAAA,UAAU,EAAC,EAHG;AAIdC,EAAAA,SAAS,EAAC;AAJI,CAAlB;AAMA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAE,KADY;AAExBC,EAAAA,IAAI,EAAC;AACDN,IAAAA,QAAQ,EAAC,KADR;AAEDC,IAAAA,IAAI,EAAC,EAFJ;AAGDC,IAAAA,UAAU,EAAC,EAHV;AAIDC,IAAAA,SAAS,EAAC,EAJT;AAKDE,IAAAA,UAAU,EAAC;AALV;AAFmB,CAArB;AAWP,OAAO,MAAME,MAAM,GAAG,QAAf,C,CAAyB;;AAChC,OAAO,MAAMC,OAAO,GAAG,SAAhB,C,CAA2B;;AAElC,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,IAAI,EAAEH,MADiB;AAEvBI,EAAAA,IAAI,EAAE;AACFX,IAAAA,QAAQ,EAAE;AADR;AAFiB,CAApB;AAOP,OAAO,MAAMY,YAAY,GAAC;AACxBF,EAAAA,IAAI,EAAEF;AADkB,CAAnB;;AAIP,MAAMK,OAAO,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAmC;AAC/C,UAAQA,MAAM,CAACL,IAAf;AACI,SAAKH,MAAL;AAAY;AACR,+CACOO,KADP;AAEIT,UAAAA,UAAU,EAAE,IAFhB;AAGIC,UAAAA,IAAI,EAAES,MAAM,CAACJ;AAHjB;AAKH;;AAED,SAAKH,OAAL;AAAa;AACT,+CACOM,KADP;AAEIT,UAAAA,UAAU,EAAE,KAFhB;AAGIC,UAAAA,IAAI,EAAE;AAHV;AAKH;;AAED;AAAQ;AACJ,iCACOQ,KADP;AAGH;AArBL;AAuBH,CAxBD;;AA0BA,eAAeD,OAAf","sourcesContent":["const dummyUser = {\r\n    nickname:'디와이',\r\n    Post:[],\r\n    Followings:[],\r\n    Followers:[],\r\n};\r\nexport const initialState = {\r\n    isLoggedIn: false,\r\n    user:{\r\n        nickname:'디와이',\r\n        Post:[],\r\n        Followings:[],\r\n        Followers:[],\r\n        isLoggedIn:false,\r\n    },\r\n};\r\n\r\nexport const LOG_IN = 'LOG_IN'; //액션의 이름\r\nexport const LOG_OUT = 'LOG_OUT'; //액션의 이름\r\n\r\nexport const loginAction = {\r\n    type: LOG_IN,\r\n    data: {\r\n        nickname: '디와이',\r\n    },\r\n};\r\n\r\nexport const logoutAction={\r\n  type: LOG_OUT,\r\n};\r\n\r\nconst reducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case LOG_IN:{\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                user: action.data,\r\n            }\r\n        }\r\n\r\n        case LOG_OUT:{\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                user: null\r\n            }\r\n        }\r\n\r\n        default:{\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}